{
    "remappings": [
        "@ensdomains/=node_modules/@ensdomains/",
        "@ethereum-waffle/=node_modules/@ethereum-waffle/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@pancakeswap/=node_modules/@pancakeswap/",
        "@prb/math/=lib/prb-math/src/",
        "@prb/test/=lib/prb-test/src/",
        "@uniswap/=node_modules/@uniswap/",
        "Common/=lib/Common/",
        "ERC20/=lib/ERC20/",
        "Governance/=lib/Governance/",
        "Math/=lib/Math/",
        "Staking/=lib/Staking/",
        "Utils/=lib/Utils/",
        "base64-sol/=node_modules/base64-sol/",
        "communal/=lib/communal/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/",
        "layerzerolabs/=lib/solidity-examples/",
        "local/=src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin/",
        "prb-math/=lib/prb-math/src/",
        "prb-test/=lib/prb-math/lib/prb-test/src/",
        "solidity-examples/=lib/solidity-examples/contracts/",
        "solmate/=lib/solmate/src/",
        "src/=lib/prb-math/src/"
    ],
    "optimizer": {
        "enabled": true,
        "runs": 9999
    },
    "metadata": {
        "bytecodeHash": "ipfs",
        "appendCBOR": true
    },
    "outputSelection": {
        "*": {
            "*": [
                "evm.bytecode",
                "evm.deployedBytecode",
                "devdoc",
                "userdoc",
                "metadata",
                "abi"
            ]
        }
    },
    "evmVersion": "london",
    "viaIR": true,
    "libraries": {}
}