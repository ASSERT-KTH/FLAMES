{
    "remappings": [
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@src/=src/",
        "@test/=test/",
        "@script-deploy/=script/deploy/",
        "@governance/=lib/frax-governance/",
        "@solmate/=lib/solmate/",
        "@chainlink/=lib/frax-governance/node_modules/@chainlink/",
        "@eth-optimism/=lib/frax-governance/node_modules/@eth-optimism/contracts/",
        "@gnosis.pm/=lib/frax-governance/node_modules/@gnosis.pm/",
        "ds-test/=lib/frax-governance/node_modules/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "frax-governance/=lib/frax-governance/",
        "frax-standard-solidity/=lib/frax-governance/node_modules/frax-standard-solidity/src/",
        "frax-std/=lib/frax-governance/node_modules/frax-standard-solidity/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin-solidity/=lib/frax-governance/node_modules/openzeppelin-solidity/contracts/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "safe-contracts/=lib/frax-governance/node_modules/@gnosis.pm/safe-contracts/contracts/",
        "safe-tools/=lib/frax-governance/node_modules/safe-tools/src/",
        "solady/=lib/frax-governance/node_modules/solady/src/",
        "solmate/=lib/solmate/src/"
    ],
    "optimizer": {
        "enabled": true,
        "runs": 200
    },
    "metadata": {
        "useLiteralContent": false,
        "bytecodeHash": "ipfs",
        "appendCBOR": true
    },
    "outputSelection": {
        "*": {
            "*": [
                "evm.bytecode",
                "evm.deployedBytecode",
                "devdoc",
                "userdoc",
                "metadata",
                "abi"
            ]
        }
    },
    "evmVersion": "shanghai",
    "libraries": {}
}